<UserControl x:Name="OperatorParameterControl" x:Class="Ymf825MidiDriver.OperatorParameter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Ymf825MidiDriver"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" d:DesignWidth="300" Height="486">
    <UserControl.Resources>
        <local:DoubleToInt32Conveter x:Key="DoubleToInt32Conveter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <system:String x:Key="WaveShapes">0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30</system:String>
        <local:WaveShapeConverter x:Key="WaveShapeConverter" />
        <local:WaveShapeToSelectedIndexConverter x:Key="WaveShapeToSelectedIndexConverter" />
        <Style TargetType="Label">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style TargetType="CheckBox">
            <EventSetter Event="Checked" Handler="OnTonePropertyChanged"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style TargetType="ComboBox">
            <EventSetter Event="SelectionChanged" Handler="OnTonePropertyChanged"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>
        <Style TargetType="Slider">
            <EventSetter Event="ValueChanged" Handler="OnTonePropertyChanged"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="TickPlacement" Value="BottomRight"/>
            <Setter Property="SmallChange" Value="1"/>
            <Setter Property="AutoToolTipPlacement" Value="TopLeft"/>
            <Setter Property="Value" Value="0"/>
            <Setter Property="IsSnapToTickEnabled" Value="True"/>
        </Style>
    </UserControl.Resources>
    <GroupBox Header="{Binding OperatorNumber, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OperatorParameter}}}"
              HeaderStringFormat="オペレータ {0}">
        <Grid>
            <Label Content="波形" Margin="4,11,0,0"/>
            <CheckBox Content="キーオフ無視" Margin="8,38,0,0"
                      IsChecked="{Binding SelectedOperator.IgnoreKeyOff, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            <ComboBox Margin="100,9,8,0" Height="53"
                      ItemsSource="{Binding Converter={StaticResource WaveShapeConverter}, Mode=OneWay, Source={StaticResource WaveShapes}}"
                      SelectedIndex="{Binding SelectedOperator.WaveShape, Converter={StaticResource WaveShapeToSelectedIndexConverter}, ElementName=OperatorParameterControl, FallbackValue=0, Mode=TwoWay}"/>
            
            <Label Content="フィードバック" Margin="4,65,0,0"
                   Visibility="{Binding HasFeedback, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OperatorParameter}}}"/>
            <Slider Margin="100,67,8,0" Maximum="7"
                    Visibility="{Binding HasFeedback, Converter={StaticResource BooleanToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:OperatorParameter}}}"
                    Value="{Binding SelectedOperator.FeedbackLevel, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label Content="周波数倍率" Margin="4,92,0,0"/>
            <Slider Margin="100,94,8,0" Ticks="0.5,1,2,3,4,5,6,7,8,9,10,12,15" AutoToolTipPrecision="1" Minimum="0.5" Maximum="15"
                    Value="{Binding SelectedOperator.MagnificationOfFrequency, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label Content="デチューン" Margin="4,119,0,0"/>
            <Slider Margin="100,120,8,0" Maximum="7"
                    Value="{Binding SelectedOperator.Detune, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <CheckBox x:Name="CheckBoxTremolo" Content="トレモロ" Margin="8,156,0,0"
                      IsChecked="{Binding SelectedOperator.EnableAmplitudeModuration, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            <Slider Margin="100,153,8,0" Maximum="3"
                    IsEnabled="{Binding IsChecked, ElementName=CheckBoxTremolo}"
                    Value="{Binding SelectedOperator.AmplitudeModurationDepth, ElementName=OperatorParameterControl, Mode=TwoWay}"/>

            <CheckBox x:Name="CheckBoxVibrato" Content="ビブラート" Margin="8,182,0,0"
                      IsChecked="{Binding SelectedOperator.EnableVibrato, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            <Slider Margin="100,179,8,0" Maximum="3"
                    IsEnabled="{Binding IsChecked, ElementName=CheckBoxVibrato}"
                    Value="{Binding SelectedOperator.VibratoDepth, ElementName=OperatorParameterControl, Mode=TwoWay}"/>

            <CheckBox x:Name="CheckBoxEnableKsr" Content="KSR有効" Margin="8,208,0,0"
                      IsChecked="{Binding SelectedOperator.EnableKeyScaleSensitivity, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            <ComboBox Margin="100,204,10,0" Height="24"
                      IsEnabled="{Binding IsChecked, ElementName=CheckBoxEnableKsr}"
                      SelectedIndex="{Binding SelectedOperator.KeyScalingLevel, ElementName=OperatorParameterControl, Mode=TwoWay, FallbackValue=0}">
                <ComboBoxItem Content="0.0 db/oct"/>
                <ComboBoxItem Content="3.0 dB/oct"/>
                <ComboBoxItem Content="1.5 dB/oct"/>
                <ComboBoxItem Content="6.0 dB/oct"/>
            </ComboBox>
            
            <Label  x:Name="LabelTotalLevel" Content="トータルレベル" Margin="4,239,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderTotalLevel" Margin="100,241,8,0" Maximum="63" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True" IsSnapToTickEnabled="False" TickFrequency="9"
                    Value="{Binding SelectedOperator.TotalLevel, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label  x:Name="LabelAttackRate" Content="アタックレート" Margin="4,271,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderAttackRate" Margin="100,273,8,0" Maximum="15" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True"
                    Value="{Binding SelectedOperator.AttackRate, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label  x:Name="LabelDecayRate" Content="ディケイレート" Margin="4,297,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderDecayRate" Margin="100,299,8,0" Maximum="15" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True"
                    Value="{Binding SelectedOperator.DecayRate, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label  x:Name="LabelSustainRate" Content="サスティンレート" Margin="4,323,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderSustainRate" Margin="100,325,8,0" Maximum="15" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True"
                    Value="{Binding SelectedOperator.SustainRate, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label  x:Name="LabelSustainLevel" Content="サスティンレベル" Margin="4,349,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderSustainLevel" Margin="100,351,8,0" Maximum="15" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True"
                    Value="{Binding SelectedOperator.SustainLevel, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <Label  x:Name="LabelReleaseRate" Content="リリースレート" Margin="4,375,0,0" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave"/>
            <Slider x:Name="SliderReleaseRate" Margin="100,377,8,0" Maximum="15" MouseEnter="SliderEnvelope_MouseEnter" MouseLeave="SliderEnvelope_MouseLeave" IsDirectionReversed="True"
                    Value="{Binding SelectedOperator.ReleaseRate, ElementName=OperatorParameterControl, Mode=TwoWay}"/>
            
            <local:EnvelopeGraph x:Name="EnvelopeGraph"
                                 HorizontalAlignment="Left" Height="80" Margin="4,399,0,0" VerticalAlignment="Top" Width="238"
                                 AttackRate="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter},ElementName=SliderAttackRate}"
                                 DecayRate="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter}, ElementName=SliderDecayRate}"
                                 ReleaseRate="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter}, ElementName=SliderReleaseRate}"
                                 EnableKsr="{Binding IsChecked, NotifyOnTargetUpdated=True, ElementName=CheckBoxEnableKsr}"
                                 SustainLevel="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter}, ElementName=SliderSustainLevel}"
                                 SustainRate="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter}, ElementName=SliderSustainRate}"
                                 TotalLevel="{Binding Value, NotifyOnTargetUpdated=True, Converter={StaticResource DoubleToInt32Conveter}, ElementName=SliderTotalLevel}"
                                 BasicOctave="{Binding SelectedToneItem.ToneParameter.BasicOctave, NotifyOnTargetUpdated=True, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}, FallbackValue=0}"
                                 TargetUpdated="EnvelopeGraph_TargetUpdated"/>
        </Grid>
    </GroupBox>
</UserControl>
